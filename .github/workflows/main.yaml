name: .NET Core

on:
  push:
    branches: [ master ]
  pull_request:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101
    
    - name: Install dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --configuration Release --no-restore
    
    - name: Test
      run: dotnet test --no-restore --verbosity normal
    
    - name: Pack Nuget Package
      run: dotnet pack --no-build --configuration Release -o artifact
    
    - name: Upload Artifact
      uses: actions/upload-artifact@v2-preview
      with:
        name: artifactv${{github.RUN_NUMBER}}
        path: ./artifact/*.nupkg

  deploy:
    needs: build
    runs-on: ubuntu-latest
    
    if: github.ref == 'refs/heads/master'
    
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v1.0.0
        with:
          name: artifactv${{github.RUN_NUMBER}}
          
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.101
          source-url: https://nuget.pkg.github.com/garethbaumgart/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
        
      - name: Publish Nuget Package
        run: dotnet nuget push ./artifactv${{github.RUN_NUMBER}}/*.nupkg

      - name: Store package name
        id: store
        run: |
          OUTPUT="$(ls ./artifactv${{github.RUN_NUMBER}}/)"
          echo "::set-output name=packagename::$OUTPUT"
        
      - name: Find package version
        id: packageversion
        uses: AsasInnab/regex-action@v1
        with:
          regex_pattern: '[0-9].[0-9].[0-9]'
          regex_flags: 'gim'
          search_string: ${{steps.store.outputs.packagename}}
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "${{ steps.packageversion.outputs.first_match }}"
          release_name: "Release ${{ steps.packageversion.outputs.first_match }}"
      
       - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./artifactv${{github.RUN_NUMBER}}/${{steps.store.outputs.packagename}}
          asset_name: ${{steps.store.outputs.packagename}}
          asset_content_type: application/nupkg

